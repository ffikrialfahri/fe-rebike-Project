{
  "info": {
    "_postman_id": "c1a2b3d4-e5f6-4a7b-8c9d-1e2f3a4b5c6d",
    "name": "Rebike API",
    "description": "A comprehensive collection for the Rebike API, a Spring Boot application for a bike rental service. This collection is structured by user roles and includes authentication helpers.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "0"
  },
  "item": [
    {
      "name": "Auth",
      "description": "Endpoints for user authentication and registration.",
      "item": [
        {
          "name": "Register Customer",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Budi\",\n    \"lastName\": \"Santoso\",\n    \"username\": \"budicustomer\",\n    \"email\": \"budi.customer@example.com\",\n    \"password\": \"password123\",\n    \"phoneNumber\": \"081234567891\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register/customer",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register",
                "customer"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register Partner",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Siti\",\n    \"lastName\": \"Aisyah\",\n    \"username\": \"sitipartner\",\n    \"email\": \"siti.partner@example.com\",\n    \"password\": \"password123\",\n    \"phoneNumber\": \"089876543211\",\n    \"locationName\": \"Siti Motor Rental\",\n    \"bankAccountName\": \"Siti Aisyah\",\n    \"bankAccountNumber\": \"1122334455\",\n    \"bankName\": \"BCA\",\n    \"latitude\": -7.983908,\n    \"longitude\": 112.621391\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register/partner",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register",
                "partner"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Automatically save the token and user ID based on role",
                  "const response = pm.response.json();",
                  "if (response && response.data && response.data.token) {",
                  "    const token = response.data.token;",
                  "    const roles = response.data.roles;",
                  "    ",
                  "    // Decode JWT to get user ID",
                  "    try {",
                  "        const jwtData = JSON.parse(atob(token.split('.')[1]));",
                  "        const username = jwtData.sub; // 'sub' is the username",
                  "        ",
                  "        if (roles.includes('ADMIN')) {",
                  "            pm.collectionVariables.set('admin_token', token);",
                  "            console.log('Admin token saved.');",
                  "        } else if (roles.includes('PARTNER')) {",
                  "            pm.collectionVariables.set('partner_token', token);",
                  "            console.log('Partner token saved.');",
                  "        } else if (roles.includes('CUSTOMER')) {",
                  "            pm.collectionVariables.set('customer_token', token);",
                  "            console.log('Customer token saved.');",
                  "        }",
                  "    } catch(e) {",
                  "        console.error('Could not parse JWT: ', e);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@rebike.com\",\n    \"password\": \"password\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with an email and password to receive a JWT. The test script will automatically save the token to a collection variable (`admin_token`, `partner_token`, or `customer_token`) based on the user's role."
          },
          "response": []
        },
        {
          "name": "Verify Email with OTP",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"budi.customer@example.com\",\n    \"otp\": \"123456\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-email",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "verify-email"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Resend OTP",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"budi.customer@example.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/resend-otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "resend-otp"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"customer@rebike.com\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "forgot-password"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password with OTP",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"customer@rebike.com\",\n    \"otp\": \"123456\",\n    \"newPassword\": \"newpassword123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password-with-otp",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "reset-password-with-otp"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Public",
      "description": "Endpoints accessible to anyone, without authentication.",
      "item": [
        {
          "name": "Get All Bikes (Filtered/Searched)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/public/bikes?page=0&size=10&search=honda&maxPrice=100000&transmissionType=automatic",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "public",
                "bikes"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "name",
                  "disabled": true
                },
                {
                  "key": "sortDirection",
                  "value": "asc",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "honda"
                },
                {
                  "key": "maxPrice",
                  "value": "100000"
                },
                {
                  "key": "transmissionType",
                  "value": "automatic"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Find Nearby Bikes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/public/bikes/nearby?lat=-7.983908&lon=112.621391&distance=5000",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "public",
                "bikes",
                "nearby"
              ],
              "query": [
                {
                  "key": "lat",
                  "value": "-7.983908",
                  "description": "Latitude of the user"
                },
                {
                  "key": "lon",
                  "value": "112.621391",
                  "description": "Longitude of the user"
                },
                {
                  "key": "distance",
                  "value": "5000",
                  "description": "Search radius in meters"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Bike by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/public/bike/{{bikeId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "public",
                "bike",
                "{{bikeId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All Pickup Points",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/public/pickup-points",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "public",
                "pickup-points"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Midtrans Webhook",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"transaction_time\": \"2024-05-20 14:00:00\",\n  \"transaction_status\": \"settlement\",\n  \"transaction_id\": \"some-midtrans-trx-id\",\n  \"status_message\": \"midtrans payment notification\",\n  \"status_code\": \"200\",\n  \"signature_key\": \"...\",\n  \"payment_type\": \"bank_transfer\",\n  \"order_id\": \"INV-RBK-{{transactionId}}\",\n  \"merchant_id\": \"...\",\n  \"gross_amount\": \"75000.00\",\n  \"fraud_status\": \"accept\",\n  \"currency\": \"IDR\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/public/notification",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "public",
                "notification"
              ]
            },
            "description": "This is a webhook endpoint for Midtrans to send payment notifications. You can test it by sending a payload like the one in the body."
          },
          "response": []
        }
      ]
    },
    {
      "name": "User (General)",
      "description": "Endpoints for any authenticated user (Customer, Partner, Admin).",
      "item": [
        {
          "name": "Change Password",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"oldPassword\": \"password\",\n    \"newPassword\": \"newpassword123\",\n    \"confirmPassword\": \"newpassword123\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "password"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "request",
                  "value": "{\n    \"firstName\": \"Budi\",\n    \"lastName\": \"Santoso Updated\",\n    \"username\": \"budicustomer\",\n    \"phoneNumber\": \"081234567899\"\n}",
                  "type": "text",
                  "contentType": "application/json"
                },
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "profile"
              ]
            },
            "description": "Update user's profile information. The profile picture is optional."
          },
          "response": []
        },
        {
          "name": "Update FCM Token",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fcmToken\": \"your_new_fcm_token_here\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/user/fcm-token",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "user",
                "fcm-token"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{customer_token}}",
            "type": "string"
          }
        ]
      },
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ]
    },
    {
      "name": "Customer",
      "description": "Endpoints specific to the Customer role.",
      "item": [
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"bikeID\": \"{{bikeId}}\",\n    \"startDate\": \"2024-08-10T10:00:00\",\n    \"endDate\": \"2024-08-11T10:00:00\",\n    \"pickupPointId\": \"{{pickupPointId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/customer/transactions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "customer",
                "transactions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Transaction History",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Get Transaction ID and save to variable\", function () {",
                  "    const response = pm.response.json();",
                  "    // Cek jika response.data adalah array dan tidak kosong",
                  "    if (response && response.data && Array.isArray(response.data) && response.data.length > 0) {",
                  "        // Ambil ID dari transaksi pertama di daftar (biasanya yang terbaru)",
                  "        const transactionId = response.data[0].transactionID; ",
                  "        pm.collectionVariables.set(\"transactionId\", transactionId);",
                  "        console.log(\"Saved transactionId: \" + transactionId);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/customer/transactions",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "customer",
                "transactions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Transaction Details by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/customer/transactions/{{transactionId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "customer",
                "transactions",
                "{{transactionId}}"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/customer/profile",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "customer",
                "profile"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{customer_token}}",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Partner",
      "description": "Endpoints for the Partner role. Requires `partner_token`.",
      "item": [
        {
          "name": "Profile",
          "item": [
            {
              "name": "Get My Partner Profile",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "profile"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update Partner Location Name",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"locationName\": \"Siti Motor Rental Jaya\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/profile",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "profile"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Bikes",
          "item": [
            {
              "name": "Add New Bike",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Save the created bike ID for later use",
                      "const response = pm.response.json();",
                      "if (response && response.data && response.data.bikeID) {",
                      "    pm.collectionVariables.set('bikeId', response.data.bikeID);",
                      "    console.log('Saved new bikeId:', response.data.bikeID);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "bikeRequest",
                      "value": "{\n    \"name\": \"Honda Vario 160 Black\",\n    \"plateNumber\": \"N 1234 ABC\",\n    \"brand\": \"Honda\",\n    \"year\": 2023,\n    \"machineCapacity\": \"160cc\",\n    \"transmissionType\": \"AUTOMATIC\",\n    \"weekdayPricePerDay\": 75000,\n    \"weekendPricePerDay\": 90000,\n    \"stock\": 1\n}",
                      "contentType": "application/json",
                      "type": "text"
                    },
                    {
                      "key": "file",
                      "type": "file",
                      "src": []
                    }
                  ]
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get My Bikes",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Bike By ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes/{{bikeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes",
                    "{{bikeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update Bike",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Honda Vario 160 CBS Black\",\n    \"plateNumber\": \"N 1234 ABC\",\n    \"brand\": \"Honda\",\n    \"year\": 2023,\n    \"machineCapacity\": \"160cc\",\n    \"transmissionType\": \"AUTOMATIC\",\n    \"weekdayPricePerDay\": 80000,\n    \"weekendPricePerDay\": 95000,\n    \"stock\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes/{{bikeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes",
                    "{{bikeId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update Bike Status",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"INACTIVE\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes/{{bikeId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes",
                    "{{bikeId}}",
                    "status"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Delete Bike",
              "request": {
                "method": "DELETE",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bikes/{{bikeId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bikes",
                    "{{bikeId}}"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Bank Info",
          "item": [
            {
              "name": "Get Bank Information",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bank-info",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bank-info"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update Bank Information",
              "request": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"bankName\": \"Mandiri\",\n    \"bankAccountName\": \"Siti Aisyah updated\",\n    \"bankAccountNumber\": \"9988776655\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/bank-info",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "bank-info"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Transactions",
          "item": [
            {
              "name": "Get My Partner Transactions (List)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Get Transaction ID for Partner and save to variable\", function () {",
                      "    const response = pm.response.json();",
                      "    // Cek jika response.data adalah array dan tidak kosong",
                      "    if (response && response.data && Array.isArray(response.data) && response.data.length > 0) {",
                      "        // Ambil ID dari transaksi pertama di daftar (biasanya yang terbaru)",
                      "        const transactionId = response.data[0].transactionID; ",
                      "        pm.collectionVariables.set(\"transactionId\", transactionId);",
                      "        console.log(\"Saved transactionId for Partner: \" + transactionId);",
                      "    }",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/transactions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "transactions"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Partner Transaction by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/transactions/{{transactionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "transactions",
                    "{{transactionId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Confirm/Reject Transaction",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"CONFIRMED\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/transactions/{{transactionId}}/confirm",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "transactions",
                    "{{transactionId}}",
                    "confirm"
                  ]
                },
                "description": "Set status to `CONFIRMED` or `CANCELLED`."
              },
              "response": []
            }
          ]
        },
        {
          "name": "Payouts & Finance",
          "item": [
            {
              "name": "Get Financial Summary",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/financial-summary",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "financial-summary"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get My Payout History",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/payouts",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "payouts"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Request Payout",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"amount\": 50000\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/partner/payouts",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "payouts"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Revenue Trend",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/partner/dashboard/revenue-trend",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "partner",
                    "dashboard",
                    "revenue-trend"
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{partner_token}}",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Admin",
      "description": "Endpoints for the Admin role. Requires `admin_token`.",
      "item": [
        {
          "name": "User Management",
          "item": [
            {
              "name": "Get All Users",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/users?page=0&size=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get User by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/users/{{userId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "users",
                    "{{userId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update User Status (Enable/Disable)",
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isEnabled\": false\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/users/{{userId}}/status",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "users",
                    "{{userId}}",
                    "status"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Partner Management",
          "item": [
            {
              "name": "Get All Partners",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/partners?page=0&size=10",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "partners"
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Partner By ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/partners/{{partnerId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "partners",
                    "{{partnerId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Verify Partner",
              "request": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isVerified\": true\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/partners/{{partnerId}}/verify",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "partners",
                    "{{partnerId}}",
                    "verify"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Admin Management",
          "item": [
            {
              "name": "Register New Admin",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"firstName\": \"Super\",\n    \"lastName\": \"Admin\",\n    \"username\": \"superadmin\",\n    \"email\": \"superadmin@rebike.com\",\n    \"password\": \"password123\",\n    \"phoneNumber\": \"081111111111\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/admins",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "admins"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Transaction Management",
          "item": [
            {
              "name": "Get All Transactions (List)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/transactions",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "transactions"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Transaction by ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/transactions/{{transactionId}}",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "transactions",
                    "{{transactionId}}"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Verify Payment",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"isValid\": true,\n    \"reason\": \"Manual verification by admin.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/transactions/{{transactionId}}/verify-payment",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "transactions",
                    "{{transactionId}}",
                    "verify-payment"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Settings",
          "item": [
            {
              "name": "Get Platform Fee",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/settings/fee",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "settings",
                    "fee"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Update Platform Fee",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"percentage\": \"12.5\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/settings/fee",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "settings",
                    "fee"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Usage Policies",
              "item": [
                {
                  "name": "Get All Usage Policies",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/usage-policies",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "usage-policies"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Create Usage Policy",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const response = pm.response.json();",
                          "if (response && response.data && response.data.id) {",
                          "    pm.collectionVariables.set('policyId', response.data.id);",
                          "    console.log('Saved new policyId:', response.data.id);",
                          "}"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"policyName\": \"No Off-road\",\n    \"description\": \"Bike should not be used for off-road activities.\",\n    \"isPermitted\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/usage-policies",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "usage-policies"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update Usage Policy",
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"policyName\": \"No Off-roading Allowed\",\n    \"description\": \"Bike is strictly prohibited from off-road activities.\",\n    \"isPermitted\": false\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/usage-policies/{{policyId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "usage-policies",
                        "{{policyId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Usage Policy",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/usage-policies/{{policyId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "usage-policies",
                        "{{policyId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ]
            },
            {
              "name": "Pickup Points",
              "item": [
                {
                  "name": "Create Pickup Point",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "const response = pm.response.json();",
                          "if (response && response.data && response.data.pickupPointID) {",
                          "    pm.collectionVariables.set('pickupPointId', response.data.pickupPointID);",
                          "    console.log('Saved new pickupPointId:', response.data.pickupPointID);",
                          "}"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"locationName\": \"Alun-Alun Kota Batu\",\n    \"address\": \"Jl. Diponegoro, Sisir, Kec. Batu, Kota Batu, Jawa Timur\",\n    \"latitude\": -7.8703,\n    \"longitude\": 112.5278\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/pickup-points",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "pickup-points"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Update Pickup Point",
                  "request": {
                    "method": "PUT",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"locationName\": \"Alun-Alun Wisata Kota Batu\",\n    \"address\": \"Jl. Diponegoro, Sisir, Kec. Batu, Kota Batu, Jawa Timur 65314\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/pickup-points/{{pickupPointId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "pickup-points",
                        "{{pickupPointId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Pickup Point",
                  "request": {
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/admin/pickup-points/{{pickupPointId}}",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "api",
                        "admin",
                        "pickup-points",
                        "{{pickupPointId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ]
            }
          ]
        },
        {
          "name": "Dashboard & Insights",
          "item": [
            {
              "name": "Get Dashboard Summary",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/dashboard/summary",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "dashboard",
                    "summary"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Fraud Alerts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/fraud-alerts",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "fraud-alerts"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Get Business Recommendations",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/recommendations",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "recommendations"
                  ]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Payout Management",
          "item": [
            {
              "name": "Get All Payouts",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/admin/payouts",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "payouts"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Process Payout",
              "request": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"status\": \"APPROVED\",\n    \"notes\": \"Approved by admin.\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/admin/payouts/{{payoutId}}/process",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "admin",
                    "payouts",
                    "{{payoutId}}",
                    "process"
                  ]
                }
              },
              "response": []
            }
          ]
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{admin_token}}",
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Chat",
      "description": "Endpoints for real-time chat. Requires authentication.",
      "item": [
        {
          "name": "Upload Image for Chat",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/chat/upload-image",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "chat",
                "upload-image"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Chat History with User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/chat/history/{{recipientId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "chat",
                "history",
                "{{recipientId}}"
              ]
            }
          },
          "response": []
        }
      ],
      "auth": {
        "type": "bearer",
        "bearer": [
          {
            "key": "token",
            "value": "{{customer_token}}",
            "type": "string"
          }
        ]
      }
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8083"
    },
    {
      "key": "admin_token",
      "value": ""
    },
    {
      "key": "partner_token",
      "value": ""
    },
    {
      "key": "customer_token",
      "value": ""
    },
    {
      "key": "userId",
      "value": "",
      "description": "ID of a general user (for admin actions)"
    },
    {
      "key": "partnerId",
      "value": "",
      "description": "ID of a partner user (for admin actions)"
    },
    {
      "key": "bikeId",
      "value": "",
      "description": "ID of a bike"
    },
    {
      "key": "transactionId",
      "value": ""
    },
    {
      "key": "policyId",
      "value": ""
    },
    {
      "key": "pickupPointId",
      "value": ""
    },
    {
      "key": "payoutId",
      "value": ""
    },
    {
      "key": "recipientId",
      "value": "",
      "description": "The user ID of the person you are chatting with"
    }
  ]
}